{"version":3,"sources":["Components/Tag.js","Components/TagGroup.js","Components/Toggle.js","Components/TagsManager.js","Components/SearchBar.js","App.js","reportWebVitals.js","index.js"],"names":["Tag","props","_React$useState","React","useState","tags","_React$useState2","Object","slicedToArray","colorStyle","color","margin","colorbackground","backgroundColor","colorPicker","Checkbox","react_default","a","createElement","style","group","Fragment","class","text","type","checked","hiddenTags","value","every","tag","includes","onChange","change","setTags","filter","newHiddenTags","forEach","push","toConsumableArray","handleHiddenTags","target","expand","setExpand","TagGroup","ReturnTags","toggelTags","tagsContext","context","setHiddenTags","Toggle","setValue","TagsManager","position","zIndex","top","concat","offset","left","toggelLinks","setToggelLinks","threeD","setThreeD","SearchBar","_useState","_useState2","nodeIDs","setNodeIDs","_useState3","_useState4","_useState5","_useState6","setText","useMemo","iDs","data","nodes","map","node","id","textAlign","ShowMatch","idMatch","toLowerCase","startsWith","length","showMatch","iMatch","onClick","handleClick","App","graphRef","useRef","Set","highlightNodes","setHighlightNodes","hoverNode","sethoverNode","_useState7","_useState8","toggelHighlight","setToggelHighlight","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","minLink","_useState15","_useState16","linkDistance","_useState17","_useState18","strength","_useState19","links","_useState20","_useState21","_useState22","filterData","setFilterData","useEffect","current","d3Force","distanceMax","distance","forceCollide","Math","pow","val","nodesData","require","linksData","handleRightClick","link","find","source","b","neighbors","mainTag","bookTags","console","log","filterdNodesIDs","newData","JSON","parse","stringify","window","open","url","clickNode","clear","add","neighbor","handleNodeHover","paintRing","useCallback","ctx","beginPath","arc","x","y","PI","fillStyle","globalAlpha","fill","radius","scale","zoom","width","measureText","name","height","moveTo","arcTo","closePath","font","fillText","NameTag","react_force_graph_module","ref","nodeRelSize","autoPauseRedraw","warmupTicks","cooldownTicks","enableNodeDrag","graphData","onNodeClick","onNodeRightClick","nodeCanvasObjectMode","has","undefined","nodeCanvasObject","onNodeHover","onBackgroundClick","linkVisibility","linkOpacity","linkWidth","linkColor","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.51a3ceee.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nexport default function Tag(props) {\r\n\r\n    const [tags, setTags] = React.useState(props.tags);\r\n\r\n    const needChecked = (hiddenTags) => {\r\n        return !tags.every(tag => hiddenTags.includes(tag))\r\n    }\r\n\r\n    const colorStyle = {\r\n        color: \"white\",\r\n        margin: \"5px\"\r\n    };\r\n\r\n    const handleHiddenTags = (checked) => {\r\n        if (checked) {\r\n            props.setTags(props.value.filter(tag => !tags.includes(tag)))\r\n        }\r\n        else {\r\n            var newHiddenTags = props.value\r\n            tags.forEach(tag => {\r\n                if (!newHiddenTags.includes(tag)) {\r\n                    newHiddenTags.push(tag)\r\n                }\r\n            })\r\n            props.setTags([...newHiddenTags])\r\n        }\r\n    }\r\n\r\n    const colorbackground = {\r\n        backgroundColor: props.colorPicker(props.tags[0])\r\n    }\r\n\r\n    const Checkbox = () =>{\r\n        return(\r\n            <p style={colorStyle}>\r\n                {props.group? <></> : <span class=\"dot\" style={colorbackground}></span>}\r\n                {\" \"+props.text}\r\n                <input\r\n                    type=\"checkbox\"\r\n                    checked={needChecked(props.value)}\r\n                    class=\"slider round\"\r\n                    onChange={(change) => { handleHiddenTags(change.target.checked) }}\r\n                />\r\n                {props.group? <input\r\n                    type=\"checkbox\"\r\n                    checked={props.expand}\r\n                    class=\"slider round\"\r\n                    onChange={() => props.setExpand(!props.expand)}\r\n                />: <></>}\r\n\r\n            </p>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {props.group? \r\n                <> \r\n                    <Checkbox></Checkbox>\r\n                </> : \r\n                <p style={colorStyle}>\r\n                    <Checkbox></Checkbox>\r\n                </p>\r\n            }\r\n        </>\r\n        \r\n    );\r\n}","import React, { useState } from 'react';\r\nimport Tag from './Tag'\r\nexport default function TagGroup(props) {\r\n\r\n    const [expand , setExpand] = React.useState(true);\r\n    const style = {\r\n        margin: \"10px\"\r\n    };\r\n\r\n    const ReturnTags = () =>{\r\n        var toggelTags = []\r\n\r\n        props.tagsContext.forEach(context => { \r\n            toggelTags.push(\r\n                <Tag \r\n                    colorPicker={props.colorPicker}\r\n                    value={props.hiddenTags} \r\n                    setTags={props.setHiddenTags} \r\n                    tags={context[0]}\r\n                    text={context[1]}>\r\n                </Tag>\r\n            )\r\n        })\r\n        return toggelTags\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <Tag \r\n                colorPicker={props.colorPicker}\r\n                value={props.hiddenTags} \r\n                setTags={props.setHiddenTags} \r\n                tags={props.tags}\r\n                text={props.text}\r\n                group={true}\r\n                expand={expand}\r\n                setExpand={setExpand}>\r\n            </Tag>\r\n\r\n            {expand ? \r\n            <div style={style}>\r\n                <ReturnTags></ReturnTags>\r\n            </div>: <></>}\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nexport default function Toggle(props) {\r\n\r\n    const colorStyle = {\r\n        color: \"white\",\r\n        margin: \"5px\"\r\n    };\r\n\r\n    const handleHiddenTags = () => {\r\n        props.setValue(!props.value)\r\n    }\r\n\r\n    return (\r\n        <p style={colorStyle}>{props.text}\r\n            <input\r\n                type=\"checkbox\"\r\n                checked={props.value}\r\n                class=\"slider round\"\r\n                onChange={() => { handleHiddenTags() }}\r\n            />\r\n        </p>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport Tag from './Tag'\r\nimport TagGroup from './TagGroup'\r\nimport Toggle from './Toggle'\r\nexport default function TagsManager(props) {\r\n\r\n    const tagOffset = 30\r\n\r\n    const style = {\r\n        color: \"white\",\r\n        position: \"absolute\",\r\n        zIndex: \"10\",\r\n        top: `${props.offset}px`,\r\n        left: \"1px\"\r\n    };\r\n\r\n    return (\r\n        <div style={style}>\r\n            <Toggle value={props.toggelLinks} setValue={props.setToggelLinks} text={\"Link Visibility\"}></Toggle>\r\n            <Toggle value={props.threeD} setValue={props.setThreeD} text={\"3D (Litte l buggy)\"}></Toggle>\r\n\r\n            <TagGroup \r\n            colorPicker={props.colorPicker}\r\n            text={\"Group: Cosmere\"}\r\n            hiddenTags={props.hiddenTags} \r\n            setHiddenTags={props.setHiddenTags}\r\n            tags={\r\n                [\r\n                    \"stormlight archive\",\r\n                    \"mistborn\", \"mistborn era 1\", \"mistborn era 2\",\r\n                    \"elantris\",\r\n                    \"emperor's soul\",\r\n                    \"warbreaker\",\r\n                    \"white sand\",\r\n                    \"first of the sun\",\r\n                    \"threnody\",\r\n                    \"brandon sanderson\",\r\n                    \"cosmere\"\r\n                ]}\r\n\r\n            tagsContext={\r\n                [\r\n                    [[\"cosmere\"], \"Cosmere\"],\r\n                    [[\"stormlight archive\"],\"The Stormlight Archive\"],\r\n                    [[\"mistborn\", \"mistborn era 1\", \"mistborn era 2\"], \"Mistborn\"],\r\n                    [[\"mistborn era 1\"], \"Mistborn era 1\"],\r\n                    [[\"mistborn era 2\"], \"Mistborn era 2\"],\r\n                    [[\"elantris\"], \"Elantris\"],\r\n                    [[\"emperor's soul\"], \"The Emperor's soul\"],\r\n                    [[\"warbreaker\"], \"Warbreaker\"],\r\n                    [[\"white sand\"], \"White sand\"],\r\n                    [[\"first of the sun\"], \"Sixth of the Dusk\"],\r\n                    [[\"threnody\"], \"Threnody\"],\r\n                    [[\"brandon sanderson\"], \"Brandon Sanderson\"]\r\n                ]}\r\n            \r\n            ></TagGroup>\r\n\r\n            <TagGroup \r\n            colorPicker={props.colorPicker}\r\n            text={\"Group: Non-Cosmere\"}\r\n            hiddenTags={props.hiddenTags} \r\n            setHiddenTags={props.setHiddenTags}\r\n            tags={[\"alcatraz\", \"rithmatist\", \"reckoners\", \"legion (series)\", \"skyward\",\"dark one\", \"\"]}\r\n\r\n            tagsContext={\r\n                [\r\n                    [[\"alcatraz\"], \"Alcatraz\"],\r\n                    [[\"rithmatist\"],\"The Rithmatist\"],\r\n                    [[\"reckoners\"],  \"The Reckoners\"],\r\n                    [[\"legion (series)\"], \"Legion\"],\r\n                    [[\"skyward\"], \"Skyward\"],\r\n                    [[\"dark one\"], \"Dark One\"],\r\n                    [[\"\"], \"No tag\"]\r\n                ]}\r\n            ></TagGroup>\r\n        </div>\r\n    );\r\n}","import React, { useState, useMemo } from 'react';\r\nexport default function SearchBar(props) {\r\n    \r\n    const [nodeIDs, setNodeIDs] = useState();\r\n    const [Match, setMatch] = useState();\r\n    const [text, setText] = useState(\"\");\r\n    \r\n    const getNodeID = useMemo(() => {\r\n        const iDs = props.data.nodes.map(node => node.id)\r\n        setNodeIDs(iDs)\r\n    }, [props.data])\r\n\r\n    const style = {\r\n        position: \"absolute\",\r\n        zIndex: \"10\",\r\n        top: `10px`,\r\n        left: \"50%\"\r\n    };\r\n\r\n    const colorStyle = {\r\n        color: \"white\",\r\n        textAlign: \"center\"\r\n    };\r\n    \r\n    const ShowMatch =() => {\r\n        if(text == \"\")\r\n            return <></>\r\n\r\n        var idMatch = nodeIDs.filter(id => id.toLowerCase().startsWith(text.toLowerCase()))\r\n        idMatch.length = 5\r\n\r\n        var showMatch = []\r\n\r\n        idMatch.forEach(iMatch => { \r\n            showMatch.push(\r\n                <p \r\n                    style={colorStyle}\r\n                    onClick={() => {\r\n                        props.handleClick(iMatch)\r\n                        setText(\"\")\r\n                    }}>\r\n                    {iMatch}\r\n                </p>\r\n            )\r\n        })\r\n        return showMatch\r\n    }\r\n\r\n    return (\r\n        <div style={style}>\r\n            <input \r\n                style={{textAlign: \"center\"}}\r\n                type=\"text\"\r\n                value={text}\r\n                onChange={(change) => setText(change.target.value)}\r\n            />\r\n            <ShowMatch></ShowMatch>\r\n        </div>\r\n    );\r\n  }","import React, { useEffect, useRef, useState, useMemo, useCallback } from \"react\";\r\nimport { ForceGraph2D, ForceGraph3D, ForceGraphVR, ForceGraphAR } from 'react-force-graph';\r\nimport { forceCollide, forceCenter } from \"d3-force\";\r\nimport TagsManager from './Components/TagsManager'\r\nimport SearchBar from './Components/SearchBar'\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const graphRef = useRef();\r\n  const [hiddenTags, setHiddenTags] = useState([\"\"]);\r\n  const [highlightNodes, setHighlightNodes] = useState(new Set())\r\n  const [hoverNode, sethoverNode] = useState(null)\r\n  const [toggelHighlight, setToggelHighlight] = useState(false)\r\n\r\n  const [threeD, setThreeD] = useState(false)\r\n\r\n  const [toggelLinks, setToggelLinks] = useState(false)\r\n  const [minLink, setMinLink] = useState(0);\r\n  const [linkDistance, setlinkDistance] = useState(5);\r\n\r\n  const [strength, setStrength] = useState(-100);\r\n\r\n  const [data, setData] = useState({nodes:[],links:[]});\r\n  const [filterData, setFilterData] = useState();\r\n\r\n  useEffect(() => {\r\n    graphRef.current.d3Force('charge').distanceMax(2000)\r\n    graphRef.current.d3Force(\"link\").distance(linkDistance);\r\n    graphRef.current.d3Force('charge').strength(strength);\r\n    graphRef.current.d3Force(\"collide\", forceCollide((node) => (0.7 * Math.pow((node.val), 0.65) + 8)))\r\n\r\n    // graphRef.current.zoom(0.2)\r\n\r\n  }, [linkDistance]);\r\n\r\n  const nodesData = require('./nodesData.json');\r\n  const linksData = require('./linksData.json');\r\n\r\n  const colorPicker = (tag) => {\r\n    switch (tag) {\r\n        case \"mistborn\":\r\n            return \"#d26407\"\r\n        case \"mistborn era 1\":\r\n            return \"#c93814\"\r\n        case \"mistborn era 2\":\r\n            return \"#ff6c36\"\r\n        case \"stormlight archive\":\r\n          return \"#004cff\"\r\n        case \"white sand\":\r\n          return \"#f2ff9c\"\r\n        case \"elantris\":\r\n          return \"#c4b20a\"\r\n        case \"emperor's soul\":\r\n          return \"#b01048\"\r\n        case \"reckoners\":\r\n          return \"#9cfff0\"\r\n        case \"first of the sun\":\r\n          return \"#04c75c\"\r\n        case \"threnody\":\r\n          return \"#195a80\"\r\n        case \"legion (series)\":\r\n          return \"#b80b5e\"\r\n        case \"skyward\":\r\n          return \"#010a38\"\r\n        case \"rithmatist\":\r\n          return \"#c400b4\"\r\n        case \"warbreaker\":\r\n          return \"#808080\"\r\n        case \"cosmere\":\r\n          return \"#1d052e\"\r\n        case \"brandon sanderson\":\r\n          return \"#8f5acc\"\r\n        case \"dark one\":\r\n          return \"black\"\r\n        case \"alcatraz\":\r\n          return \"#80576f\"\r\n        default:\r\n          return \"white\"\r\n      }\r\n  }\r\n\r\n  const neighborData = useMemo(() => {\r\n    linksData.forEach(link => {\r\n      const a = nodesData.find(node => node.id == link.source)\r\n      const b = nodesData.find(node => node.id == link.target)\r\n      !a.neighbors && (a.neighbors = [])\r\n      !b.neighbors && (b.neighbors = [])\r\n      !a.neighbors.includes(b.id) && a.neighbors.push(b.id)\r\n      !b.neighbors.includes(a.id) && b.neighbors.push(a.id)\r\n    })\r\n\r\n    nodesData.forEach(node => {\r\n      node.val = node.neighbors.length\r\n      node.color = colorPicker(node.tags.mainTag)\r\n\r\n      if (node.tags.mainTag == \"mistborn\"){\r\n        if (node.tags.bookTags.includes(\"mistborn era 1\") && !node.tags.bookTags.includes(\"mistborn era 2\")) {\r\n          node.tags.mainTag = \"mistborn era 1\"\r\n        } else if (!node.tags.bookTags.includes(\"mistborn era 1\") && node.tags.bookTags.includes(\"mistborn era 2\")) {\r\n          node.tags.mainTag = \"mistborn era 2\"\r\n        } \r\n      }\r\n    })\r\n  }, [])\r\n\r\n  const graphData = useMemo(() => {\r\n    console.log(hiddenTags)\r\n\r\n    var filterdNodes = nodesData.filter((node) => (hiddenTags.includes(node.tags.mainTag) || node.val < minLink))\r\n    var filterdNodesIDs = filterdNodes.map(node => node.id)\r\n\r\n    const data = {\r\n      nodes: nodesData.filter((node) => !filterdNodesIDs.includes(node.id)),\r\n      links: linksData.filter((link) => !(filterdNodesIDs.includes(link.target) || filterdNodesIDs.includes(link.source)))\r\n    };\r\n    const newData = JSON.parse(JSON.stringify(data))\r\n\r\n    setFilterData(newData)\r\n  }, [hiddenTags, minLink, linkDistance, strength, highlightNodes, data])\r\n\r\n  const handleRightClick = (node) => {\r\n    window.open(node.url);\r\n  }\r\n\r\n  const handleClick = (id) => {\r\n\r\n    const clickNode = filterData.nodes.find(node => node.id == id)\r\n\r\n    if (toggelHighlight && hoverNode == id) {\r\n      setToggelHighlight(false)\r\n      highlightNodes.clear();\r\n      setHighlightNodes(highlightNodes);\r\n      sethoverNode(null)\r\n    }\r\n    else {\r\n      highlightNodes.clear();\r\n      highlightNodes.add(id)\r\n      clickNode.neighbors.forEach(neighbor => highlightNodes.add(neighbor))\r\n      sethoverNode(id)\r\n      setHighlightNodes(highlightNodes)\r\n      setToggelHighlight(true)\r\n    }\r\n  }\r\n\r\n  const handleNodeHover = (node) => {\r\n    console.log(node)\r\n\r\n    if (!toggelHighlight) {\r\n      highlightNodes.clear();\r\n\r\n      if (node) {\r\n        highlightNodes.add(node.id)\r\n        node.neighbors.forEach(neighbor => highlightNodes.add(neighbor))\r\n        sethoverNode(node.id)\r\n      }\r\n      else {\r\n        sethoverNode(null)\r\n      }\r\n      setHighlightNodes(highlightNodes)\r\n    }\r\n  }\r\n\r\n  const NameTag = (ctx, node, radius) => {\r\n\r\n    const scale = graphRef.current.zoom() * 5 + 3\r\n    const offset = (4 * Math.pow((node.val), 0.3)) + 10\r\n\r\n    const width = ctx.measureText(node.name + \"  \").width\r\n    const height = (138 / scale);\r\n\r\n    const x = node.x - (width / 2)\r\n    const y = node.y - (height * 0.77) + offset\r\n\r\n    if (width < 2 * radius) radius = width / 2\r\n    if (height < 2 * radius) radius = height / 2\r\n\r\n    ctx.fillStyle = \"rgba(0, 0, 0, 0.5)\";\r\n    ctx.globalAlpha = 0.5\r\n\r\n    ctx.beginPath()\r\n    ctx.moveTo(x + radius, y)\r\n    ctx.arcTo(x + width, y, x + width, y + height, radius)\r\n    ctx.arcTo(x + width, y + height, x, y + height, radius)\r\n    ctx.arcTo(x, y + height, x, y, radius)\r\n    ctx.arcTo(x, y, x + width, y, radius)\r\n    ctx.closePath()\r\n    ctx.fill()\r\n    ctx.globalAlpha = 1\r\n\r\n    ctx.font = `${120 / scale}px sans-serif`;\r\n    ctx.fillStyle = 'white';\r\n    ctx.textAlign = \"center\"\r\n    ctx.fillText(node.name, node.x, node.y + offset)\r\n    ctx.globalAlpha = 0.2\r\n  }\r\n\r\n  const paintRing = useCallback((node, ctx) => {\r\n    \r\n      ctx.beginPath()\r\n      ctx.arc(node.x, node.y, (0.8 * Math.pow((node.val), 0.6)), 0, 2 * Math.PI, false)\r\n      ctx.fillStyle = node.id == hoverNode ? \"white\" : node.color\r\n      ctx.globalAlpha = 1\r\n      ctx.fill()\r\n\r\n      NameTag(ctx, node, 1)\r\n\r\n  }, [hoverNode])\r\n\r\n  var one = 1\r\n\r\n  return (\r\n    <div>\r\n\r\n      <SearchBar data={filterData} handleClick={handleClick}></SearchBar>\r\n      <TagsManager \r\n        threeD={threeD}\r\n        setThreeD={setThreeD}\r\n        colorPicker={colorPicker}\r\n        hiddenTags={hiddenTags} \r\n        setHiddenTags={setHiddenTags}\r\n        setToggelLinks={setToggelLinks}\r\n        toggelLinks={toggelLinks}\r\n      ></TagsManager>\r\n\r\n      {threeD ? \r\n        <ForceGraph3D\r\n          ref={graphRef}\r\n          nodeRelSize={2}\r\n          autoPauseRedraw={false}\r\n          warmupTicks={100}\r\n          cooldownTicks={0}\r\n          enableNodeDrag={false}\r\n          graphData={filterData}\r\n          backgroundColor={\"#2e2b28\"}\r\n          onNodeClick={(node) => handleClick(node.id)}\r\n          onNodeRightClick={handleRightClick}\r\n          nodeCanvasObjectMode={node => highlightNodes.has(node.id) ? 'after' : undefined}\r\n          nodeCanvasObject={paintRing}\r\n          onNodeHover={handleNodeHover}\r\n          onBackgroundClick={() => {\r\n            setToggelHighlight(false)\r\n            highlightNodes.clear();\r\n            setHighlightNodes(highlightNodes);\r\n            sethoverNode(null)\r\n          }}\r\n          linkVisibility={link => toggelLinks ? true : (hoverNode == link.target.id || hoverNode == link.source.id)}\r\n          linkOpacity={link => (hoverNode == link.target.id || hoverNode == link.source.id) ? 0.3 : 0.1}\r\n          linkWidth={link => (hoverNode == link.target.id || hoverNode == link.source.id) ? 1 : 0.1}\r\n          linkColor={link => (hoverNode == link.target.id || hoverNode == link.source.id) ? \"#5454ff\" : \"black\"} \r\n        /> \r\n      :\r\n        <ForceGraph2D\r\n        ref={graphRef}\r\n        nodeRelSize={2}\r\n        autoPauseRedraw={false}\r\n        warmupTicks={100}\r\n        cooldownTicks={0}\r\n        enableNodeDrag={false}\r\n        graphData={filterData}\r\n        backgroundColor={\"#2e2b28\"}\r\n        onNodeClick={(node) => handleClick(node.id)}\r\n        onNodeRightClick={handleRightClick}\r\n        nodeCanvasObjectMode={node => highlightNodes.has(node.id) ? 'after' : undefined}\r\n        nodeCanvasObject={paintRing}\r\n        onNodeHover={handleNodeHover}\r\n        onBackgroundClick={() => {\r\n          setToggelHighlight(false)\r\n          highlightNodes.clear();\r\n          setHighlightNodes(highlightNodes);\r\n          sethoverNode(null)\r\n        }}\r\n        linkVisibility={link => toggelLinks ? true : (hoverNode == link.target.id || hoverNode == link.source.id)}\r\n        linkOpacity={link => (hoverNode == link.target.id || hoverNode == link.source.id) ? 0.3 : 0.1}\r\n        linkWidth={link => (hoverNode == link.target.id || hoverNode == link.source.id) ? 1 : 0.1}\r\n        linkColor={link => (hoverNode == link.target.id || hoverNode == link.source.id) ? \"#5454ff\" : \"black\"} \r\n      /> }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n    {/* <Coll /> */}\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}